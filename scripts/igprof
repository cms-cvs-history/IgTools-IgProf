#!/bin/sh
# Collect up args for igprof.

usage() {
  echo "igprof [options] program [options]"
  echo
  echo "Options to igprof:"
  echo -e "-h, --help                 \tthis help message"
  echo -e "-d, --debug                \tenable more details from profiler"
  echo -e "-f, --full                 \tstart all the profilers"
  echo -e "-mp, --memory-profiler     \tstart the memory profiler"
  echo -e "-pp, --performance-profiler\tstart the performance profile (default)"
  echo -e "-pr, --real-time           \tmeasure real time in performance profiler"
  echo -e "-pu, --user-time           \tmeasure user time in performance profiler"
  echo -e "-fd, --file-descriptor     \tstart the file descriptor profile"
  echo -e "-cl, --check-leaks         \tenable leak tracking in activated profilers"
  echo -e "[--] cmd [args...]         \tcommand arguments to execute"
}

append() { eval "if [ -z \"\$$1\" ]; then $1=\"\$2\"; else $1=\"\$$1 \$2\"; fi"; }

SORT= MEM= FD= PERF= ALL=
while [ "$#" != 0 ]; do
  case "$1" in
    -h | --help )
      usage; exit 1;;

    -d | --debug )
      IGPROF_DEBUGGING=1; export IGPROF_DEBUGGING; shift ;;

    -f | --full )
      MEM="mem" FD="fd" PERF="perf" ALL=":all"; shift ;;

    -mp | --memory-profiler )
      [ -z "$MEM" ] && MEM=mem
      MEM="$MEM:total:largest:live"; shift;;

    -fd | --file-descriptor )
      [ -z "$FD" ] && FD=fd
      FD="$FD:used:live"; shift ;;

    -pp | --performance-profiler )
      PERF="perf"; shift ;;
    -pr | --real-time )
      [ -z "$PERF" ] && PERF="perf"; PERF="$PERF:real"; shift ;;
    -pu | --user-time )
      [ -z "$PERF" ] && PERF="perf"; PERF="$PERF:user"; shift ;;

    -cl | --check-leaks )
      ALL="$ALL:leaks"; shift ;;

    -- )
      shift; break ;;

    -* )
      echo "$0: unrecognised option $1"
      usage 
      exit 1 ;;

    * )
      break ;;
  esac
done

[ X"$MEM" = X -a X"$FD" = X -a X"$PERF" = X ] && PERF=perf

if [ -z "$ALL" ]; then :; else
  [ -z "$MEM"  ] || MEM="$MEM:all"
  [ -z "$FD"   ] || FD="$FD:all"
  [ -z "$PERF" ] || PERF="$PERF:all"
fi

[ X"$MEM" = X ]  || append IGPROF "$MEM"
[ X"$FD" = X ]   || append IGPROF "$FD"
[ X"$PERF" = X ] || append IGPROF "$PERF"

case $(uname) in
  Darwin )
    DYLD_BIND_AT_LAUNCH=1
    DYLD_INSERT_LIBRARIES=$LOCALRT/lib/`scram arch`/libIgProf.dylib
    export DYLD_BIND_AT_LAUNCH DYLD_INSERT_LIBRARIES ;;
  * )
    LD_PRELOAD=libIgProf.so;
    export LD_PRELOAD ;;
esac
export IGPROF
exec "$@"
