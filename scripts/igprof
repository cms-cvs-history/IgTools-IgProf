#!/bin/sh
# Collect up args for igprof.

usage() {
  echo -e "--help                \tthis help message"
  echo 
  echo -e "Options for profiling"
  echo -e "--mode profile        \tforce profile mode"
  echo -e "--memory-profiler     \tstart the memory profiler"
  echo -e "--performance-profiler\tstart the performance profile"
  echo -e "--file-descriptor     \tstart the file descriptor profile"
  echo -e "--check-leaks         \tenable leak tracking"
  echo -e "cmd [args...]         \tcommand arguments to execute"
  echo
  echo -e "Options for analysis"
  echo -e "--mode analyse        \tforce analysis mode"
  echo -e "--report C1[,C2...]   \treport counters C1, C2, ..."
  echo -e "--sort C1[,C2...]     \tsort by counters C1, C2, ..."
  echo -e "--order ORDER         \torder 'ascending' or 'descending'"
  echo -e "--filter FILE         \tsuppress symbols mentioned in FILE"
  echo -e "--no-filtering        \tdon't suppress default symbols"
  echo -e "file [...]            \tfiles to analyse"
}

append() { eval "if [ -z \"\$$1\" ]; then $1=\"\$2\"; else $1=\"\$$1 \$2\"; fi"; }

SORT= MEM= FD= PERF= ALL= MODE=profile
while [ "$#" != 0 ]; do
  case "$1" in
    --help | -h )
      usage; exit 1;;

    --debug )
      IGPROF_DEBUGGING=1; export IGPROF_DEBUGGING; shift ;;

    --mode )
      MODE="$2"; shift; shift ;;

    --full )
      MEM="mem" FD="fd" PERF="perf" ALL=":all" MODE=profile; shift ;;

    --memory-profiler | --memory | -m | -mp )
      [ -z "$MEM" ] && MEM=mem
      MEM="$MEM:total:largest:live" MODE=profile; shift;;

    --file-descriptor | --fd | -f | -fd )
      [ -z "$FD" ] && FD=fd
      FD="$FD:used:live" MODE=profile; shift ;;

    --check-leaks | --leaks | -l | -cl )
      ALL="$ALL:leaks" MODE=profile; shift ;;

    --performance-profiler | --performance | -p | -pp )
      PERF="perf" MODE=profile; shift ;;

    --analyse )
      MODE=report ;;
    --report | -R )
      SORT="$SORT --report $2"; MODE=report; shift; shift ;;
    --sort | -s )
      SORT="$SORT --sort $2"; MODE=report; shift; shift ;;
    --order )
      SORT="$SORT --order $2"; shift; shift ;;
    --filter )
      SORT="$SORT --filter $2"; shift; shift ;;
    --no-filtering )
      SORT="$SORT --no-filter"; shift ;;

    -- )
      shift; break ;;

    -* )
      echo "$0: unrecognised option $1"
      usage 
      exit 1 ;;

    * )
      break ;;
  esac
done

if [ MODE=profile -a X"$MEM" = X -a X"$FD" = X -a X"$PERF" = X ]; then
  PERF=perf
fi

if [ -z "$ALL" ]; then :; else
  [ -z "$MEM"  ] || MEM="$MEM:all"
  [ -z "$FD"   ] || FD="$FD:all"
  [ -z "$PERF" ] || PERF="$PERF:all"
fi

if [ X$MODE = Xprofile ]; then

  [ X"$MEM" = X ]  || append IGPROF "$MEM"
  [ X"$FD" = X ]   || append IGPROF "$FD"
  [ X"$PERF" = X ] || append IGPROF "$PERF"

  case $(uname) in
    Darwin )
      DYLD_BIND_AT_LAUNCH=1
      DYLD_INSERT_LIBRARIES=$LOCALRT/lib/`scram arch`/libIgProf.dylib;
      export DYLD_BIND_AT_LAUNCH DYLD_INSERT_LIBRARIES ;;
    * )
      LD_PRELOAD=libIgProf.so;
      export LD_PRELOAD ;;
  esac
  export IGPROF
  exec "$@"

else
  igprof-analyse $SORT ${1+"$@"}
fi
